// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWeldingMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addWorkers;

  @NonNull
  public final MaterialButton approvalRejectionRequest;

  @NonNull
  public final MaterialButton counting;

  @NonNull
  public final MaterialButton createRejectionRequest;

  @NonNull
  public final MaterialButton itemsReceiving;

  @NonNull
  public final MaterialButton machineloadingBtn;

  @NonNull
  public final MaterialButton machinesignoffBtn;

  @NonNull
  public final MaterialButton productionRepairBtn;

  @NonNull
  public final MaterialButton rejectionRequestsList;

  @NonNull
  public final TextView weldingmenu;

  @NonNull
  public final MaterialButton weldingwipBtn;

  private FragmentWeldingMenuBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addWorkers, @NonNull MaterialButton approvalRejectionRequest,
      @NonNull MaterialButton counting, @NonNull MaterialButton createRejectionRequest,
      @NonNull MaterialButton itemsReceiving, @NonNull MaterialButton machineloadingBtn,
      @NonNull MaterialButton machinesignoffBtn, @NonNull MaterialButton productionRepairBtn,
      @NonNull MaterialButton rejectionRequestsList, @NonNull TextView weldingmenu,
      @NonNull MaterialButton weldingwipBtn) {
    this.rootView = rootView;
    this.addWorkers = addWorkers;
    this.approvalRejectionRequest = approvalRejectionRequest;
    this.counting = counting;
    this.createRejectionRequest = createRejectionRequest;
    this.itemsReceiving = itemsReceiving;
    this.machineloadingBtn = machineloadingBtn;
    this.machinesignoffBtn = machinesignoffBtn;
    this.productionRepairBtn = productionRepairBtn;
    this.rejectionRequestsList = rejectionRequestsList;
    this.weldingmenu = weldingmenu;
    this.weldingwipBtn = weldingwipBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWeldingMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWeldingMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_welding_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWeldingMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_workers;
      MaterialButton addWorkers = ViewBindings.findChildViewById(rootView, id);
      if (addWorkers == null) {
        break missingId;
      }

      id = R.id.approval_rejection_request;
      MaterialButton approvalRejectionRequest = ViewBindings.findChildViewById(rootView, id);
      if (approvalRejectionRequest == null) {
        break missingId;
      }

      id = R.id.counting;
      MaterialButton counting = ViewBindings.findChildViewById(rootView, id);
      if (counting == null) {
        break missingId;
      }

      id = R.id.create_rejection_request;
      MaterialButton createRejectionRequest = ViewBindings.findChildViewById(rootView, id);
      if (createRejectionRequest == null) {
        break missingId;
      }

      id = R.id.items_receiving;
      MaterialButton itemsReceiving = ViewBindings.findChildViewById(rootView, id);
      if (itemsReceiving == null) {
        break missingId;
      }

      id = R.id.machineloading_btn;
      MaterialButton machineloadingBtn = ViewBindings.findChildViewById(rootView, id);
      if (machineloadingBtn == null) {
        break missingId;
      }

      id = R.id.machinesignoff_btn;
      MaterialButton machinesignoffBtn = ViewBindings.findChildViewById(rootView, id);
      if (machinesignoffBtn == null) {
        break missingId;
      }

      id = R.id.production_repair_btn;
      MaterialButton productionRepairBtn = ViewBindings.findChildViewById(rootView, id);
      if (productionRepairBtn == null) {
        break missingId;
      }

      id = R.id.rejection_requests_list;
      MaterialButton rejectionRequestsList = ViewBindings.findChildViewById(rootView, id);
      if (rejectionRequestsList == null) {
        break missingId;
      }

      id = R.id.weldingmenu;
      TextView weldingmenu = ViewBindings.findChildViewById(rootView, id);
      if (weldingmenu == null) {
        break missingId;
      }

      id = R.id.weldingwip_btn;
      MaterialButton weldingwipBtn = ViewBindings.findChildViewById(rootView, id);
      if (weldingwipBtn == null) {
        break missingId;
      }

      return new FragmentWeldingMenuBinding((ConstraintLayout) rootView, addWorkers,
          approvalRejectionRequest, counting, createRejectionRequest, itemsReceiving,
          machineloadingBtn, machinesignoffBtn, productionRepairBtn, rejectionRequestsList,
          weldingmenu, weldingwipBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
