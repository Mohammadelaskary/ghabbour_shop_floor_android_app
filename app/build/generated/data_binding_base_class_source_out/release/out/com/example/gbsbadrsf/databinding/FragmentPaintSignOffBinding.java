// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPaintSignOffBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView Joborderqtn;

  @NonNull
  public final ConstraintLayout jobOrderData;

  @NonNull
  public final TextView jobordernum;

  @NonNull
  public final TextView jobordernumTxt;

  @NonNull
  public final TextView loadingQty;

  @NonNull
  public final TextView operationname;

  @NonNull
  public final TextView parentDesc;

  @NonNull
  public final MaterialButton signOff;

  @NonNull
  public final ConstraintLayout signOffData;

  @NonNull
  public final TextView signOffQty;

  @NonNull
  public final TextView signOffQtyTxt;

  @NonNull
  public final TextView signoffqtnTxt;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView20;

  private FragmentPaintSignOffBinding(@NonNull ScrollView rootView, @NonNull TextView Joborderqtn,
      @NonNull ConstraintLayout jobOrderData, @NonNull TextView jobordernum,
      @NonNull TextView jobordernumTxt, @NonNull TextView loadingQty,
      @NonNull TextView operationname, @NonNull TextView parentDesc,
      @NonNull MaterialButton signOff, @NonNull ConstraintLayout signOffData,
      @NonNull TextView signOffQty, @NonNull TextView signOffQtyTxt,
      @NonNull TextView signoffqtnTxt, @NonNull TextView textView1, @NonNull TextView textView20) {
    this.rootView = rootView;
    this.Joborderqtn = Joborderqtn;
    this.jobOrderData = jobOrderData;
    this.jobordernum = jobordernum;
    this.jobordernumTxt = jobordernumTxt;
    this.loadingQty = loadingQty;
    this.operationname = operationname;
    this.parentDesc = parentDesc;
    this.signOff = signOff;
    this.signOffData = signOffData;
    this.signOffQty = signOffQty;
    this.signOffQtyTxt = signOffQtyTxt;
    this.signoffqtnTxt = signoffqtnTxt;
    this.textView1 = textView1;
    this.textView20 = textView20;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPaintSignOffBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPaintSignOffBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_paint_sign_off, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPaintSignOffBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Joborderqtn;
      TextView Joborderqtn = ViewBindings.findChildViewById(rootView, id);
      if (Joborderqtn == null) {
        break missingId;
      }

      id = R.id.job_order_data;
      ConstraintLayout jobOrderData = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderData == null) {
        break missingId;
      }

      id = R.id.jobordernum;
      TextView jobordernum = ViewBindings.findChildViewById(rootView, id);
      if (jobordernum == null) {
        break missingId;
      }

      id = R.id.jobordernum_txt;
      TextView jobordernumTxt = ViewBindings.findChildViewById(rootView, id);
      if (jobordernumTxt == null) {
        break missingId;
      }

      id = R.id.loading_qty;
      TextView loadingQty = ViewBindings.findChildViewById(rootView, id);
      if (loadingQty == null) {
        break missingId;
      }

      id = R.id.operationname;
      TextView operationname = ViewBindings.findChildViewById(rootView, id);
      if (operationname == null) {
        break missingId;
      }

      id = R.id.parent_desc;
      TextView parentDesc = ViewBindings.findChildViewById(rootView, id);
      if (parentDesc == null) {
        break missingId;
      }

      id = R.id.sign_off;
      MaterialButton signOff = ViewBindings.findChildViewById(rootView, id);
      if (signOff == null) {
        break missingId;
      }

      id = R.id.sign_off_data;
      ConstraintLayout signOffData = ViewBindings.findChildViewById(rootView, id);
      if (signOffData == null) {
        break missingId;
      }

      id = R.id.sign_off_qty;
      TextView signOffQty = ViewBindings.findChildViewById(rootView, id);
      if (signOffQty == null) {
        break missingId;
      }

      id = R.id.sign_off_qty_txt;
      TextView signOffQtyTxt = ViewBindings.findChildViewById(rootView, id);
      if (signOffQtyTxt == null) {
        break missingId;
      }

      id = R.id.signoffqtn_txt;
      TextView signoffqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (signoffqtnTxt == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      return new FragmentPaintSignOffBinding((ScrollView) rootView, Joborderqtn, jobOrderData,
          jobordernum, jobordernumTxt, loadingQty, operationname, parentDesc, signOff, signOffData,
          signOffQty, signOffQtyTxt, signoffqtnTxt, textView1, textView20);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
