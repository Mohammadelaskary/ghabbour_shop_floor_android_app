// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PaintPprItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView childTxt;

  @NonNull
  public final TextView jobOrderQty;

  @NonNull
  public final TextView joborderqtnTxt;

  @NonNull
  public final LinearLayout myView;

  @NonNull
  public final TextView parentDesc;

  @NonNull
  public final TextView signOffQty;

  private PaintPprItemBinding(@NonNull LinearLayout rootView, @NonNull TextView childTxt,
      @NonNull TextView jobOrderQty, @NonNull TextView joborderqtnTxt, @NonNull LinearLayout myView,
      @NonNull TextView parentDesc, @NonNull TextView signOffQty) {
    this.rootView = rootView;
    this.childTxt = childTxt;
    this.jobOrderQty = jobOrderQty;
    this.joborderqtnTxt = joborderqtnTxt;
    this.myView = myView;
    this.parentDesc = parentDesc;
    this.signOffQty = signOffQty;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PaintPprItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PaintPprItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.paint_ppr_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PaintPprItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.child_txt;
      TextView childTxt = ViewBindings.findChildViewById(rootView, id);
      if (childTxt == null) {
        break missingId;
      }

      id = R.id.job_order_qty;
      TextView jobOrderQty = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderQty == null) {
        break missingId;
      }

      id = R.id.joborderqtn_txt;
      TextView joborderqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (joborderqtnTxt == null) {
        break missingId;
      }

      LinearLayout myView = (LinearLayout) rootView;

      id = R.id.parent_desc;
      TextView parentDesc = ViewBindings.findChildViewById(rootView, id);
      if (parentDesc == null) {
        break missingId;
      }

      id = R.id.sign_off_qty;
      TextView signOffQty = ViewBindings.findChildViewById(rootView, id);
      if (signOffQty == null) {
        break missingId;
      }

      return new PaintPprItemBinding((LinearLayout) rootView, childTxt, jobOrderQty, joborderqtnTxt,
          myView, parentDesc, signOffQty);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
