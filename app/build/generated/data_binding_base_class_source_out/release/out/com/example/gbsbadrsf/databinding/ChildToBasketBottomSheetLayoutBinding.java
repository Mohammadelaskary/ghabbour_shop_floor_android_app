// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChildToBasketBottomSheetLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout basketCode;

  @NonNull
  public final RecyclerView basketList;

  @NonNull
  public final ConstraintLayout bottomButtons;

  @NonNull
  public final MaterialButton cancel;

  @NonNull
  public final TextView childDesc;

  @NonNull
  public final MaterialCardView materialCardView;

  @NonNull
  public final TextView qty;

  @NonNull
  public final MaterialButton save;

  @NonNull
  public final View view3;

  private ChildToBasketBottomSheetLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout basketCode, @NonNull RecyclerView basketList,
      @NonNull ConstraintLayout bottomButtons, @NonNull MaterialButton cancel,
      @NonNull TextView childDesc, @NonNull MaterialCardView materialCardView,
      @NonNull TextView qty, @NonNull MaterialButton save, @NonNull View view3) {
    this.rootView = rootView;
    this.basketCode = basketCode;
    this.basketList = basketList;
    this.bottomButtons = bottomButtons;
    this.cancel = cancel;
    this.childDesc = childDesc;
    this.materialCardView = materialCardView;
    this.qty = qty;
    this.save = save;
    this.view3 = view3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChildToBasketBottomSheetLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChildToBasketBottomSheetLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.child_to_basket_bottom_sheet_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChildToBasketBottomSheetLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.basket_code;
      TextInputLayout basketCode = ViewBindings.findChildViewById(rootView, id);
      if (basketCode == null) {
        break missingId;
      }

      id = R.id.basket_list;
      RecyclerView basketList = ViewBindings.findChildViewById(rootView, id);
      if (basketList == null) {
        break missingId;
      }

      id = R.id.bottom_buttons;
      ConstraintLayout bottomButtons = ViewBindings.findChildViewById(rootView, id);
      if (bottomButtons == null) {
        break missingId;
      }

      id = R.id.cancel;
      MaterialButton cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.child_desc;
      TextView childDesc = ViewBindings.findChildViewById(rootView, id);
      if (childDesc == null) {
        break missingId;
      }

      id = R.id.materialCardView;
      MaterialCardView materialCardView = ViewBindings.findChildViewById(rootView, id);
      if (materialCardView == null) {
        break missingId;
      }

      id = R.id.qty;
      TextView qty = ViewBindings.findChildViewById(rootView, id);
      if (qty == null) {
        break missingId;
      }

      id = R.id.save;
      MaterialButton save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      return new ChildToBasketBottomSheetLayoutBinding((ConstraintLayout) rootView, basketCode,
          basketList, bottomButtons, cancel, childDesc, materialCardView, qty, save, view3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
