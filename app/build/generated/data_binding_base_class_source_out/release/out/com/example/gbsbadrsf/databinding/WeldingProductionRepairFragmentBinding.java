// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WeldingProductionRepairFragmentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton addRepair;

  @NonNull
  public final TextInputLayout basketCode;

  @NonNull
  public final BasketQtyDataBinding basketQtyLayout;

  @NonNull
  public final LinearLayout constraint;

  @NonNull
  public final ConstraintLayout dataLayout;

  @NonNull
  public final TextView defectnameTxt;

  @NonNull
  public final RecyclerView defectsDetailsList;

  @NonNull
  public final TextView defectsList;

  @NonNull
  public final TextView hint;

  @NonNull
  public final JobOrderDataBinding jobOrderData;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView parentDesc;

  @NonNull
  public final TextView productionRepairTxt;

  @NonNull
  public final TextView sampleqtyTxt;

  private WeldingProductionRepairFragmentBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton addRepair, @NonNull TextInputLayout basketCode,
      @NonNull BasketQtyDataBinding basketQtyLayout, @NonNull LinearLayout constraint,
      @NonNull ConstraintLayout dataLayout, @NonNull TextView defectnameTxt,
      @NonNull RecyclerView defectsDetailsList, @NonNull TextView defectsList,
      @NonNull TextView hint, @NonNull JobOrderDataBinding jobOrderData,
      @NonNull TextView operation, @NonNull TextView parentDesc,
      @NonNull TextView productionRepairTxt, @NonNull TextView sampleqtyTxt) {
    this.rootView = rootView;
    this.addRepair = addRepair;
    this.basketCode = basketCode;
    this.basketQtyLayout = basketQtyLayout;
    this.constraint = constraint;
    this.dataLayout = dataLayout;
    this.defectnameTxt = defectnameTxt;
    this.defectsDetailsList = defectsDetailsList;
    this.defectsList = defectsList;
    this.hint = hint;
    this.jobOrderData = jobOrderData;
    this.operation = operation;
    this.parentDesc = parentDesc;
    this.productionRepairTxt = productionRepairTxt;
    this.sampleqtyTxt = sampleqtyTxt;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static WeldingProductionRepairFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WeldingProductionRepairFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.welding_production_repair_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WeldingProductionRepairFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_repair;
      MaterialButton addRepair = ViewBindings.findChildViewById(rootView, id);
      if (addRepair == null) {
        break missingId;
      }

      id = R.id.basket_code;
      TextInputLayout basketCode = ViewBindings.findChildViewById(rootView, id);
      if (basketCode == null) {
        break missingId;
      }

      id = R.id.basket_qty_layout;
      View basketQtyLayout = ViewBindings.findChildViewById(rootView, id);
      if (basketQtyLayout == null) {
        break missingId;
      }
      BasketQtyDataBinding binding_basketQtyLayout = BasketQtyDataBinding.bind(basketQtyLayout);

      id = R.id.constraint;
      LinearLayout constraint = ViewBindings.findChildViewById(rootView, id);
      if (constraint == null) {
        break missingId;
      }

      id = R.id.data_layout;
      ConstraintLayout dataLayout = ViewBindings.findChildViewById(rootView, id);
      if (dataLayout == null) {
        break missingId;
      }

      id = R.id.defectname_txt;
      TextView defectnameTxt = ViewBindings.findChildViewById(rootView, id);
      if (defectnameTxt == null) {
        break missingId;
      }

      id = R.id.defects_details_list;
      RecyclerView defectsDetailsList = ViewBindings.findChildViewById(rootView, id);
      if (defectsDetailsList == null) {
        break missingId;
      }

      id = R.id.defects_list;
      TextView defectsList = ViewBindings.findChildViewById(rootView, id);
      if (defectsList == null) {
        break missingId;
      }

      id = R.id.hint;
      TextView hint = ViewBindings.findChildViewById(rootView, id);
      if (hint == null) {
        break missingId;
      }

      id = R.id.job_order_data;
      View jobOrderData = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderData == null) {
        break missingId;
      }
      JobOrderDataBinding binding_jobOrderData = JobOrderDataBinding.bind(jobOrderData);

      id = R.id.operation;
      TextView operation = ViewBindings.findChildViewById(rootView, id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.parent_desc;
      TextView parentDesc = ViewBindings.findChildViewById(rootView, id);
      if (parentDesc == null) {
        break missingId;
      }

      id = R.id.production_repair_txt;
      TextView productionRepairTxt = ViewBindings.findChildViewById(rootView, id);
      if (productionRepairTxt == null) {
        break missingId;
      }

      id = R.id.sampleqty_txt;
      TextView sampleqtyTxt = ViewBindings.findChildViewById(rootView, id);
      if (sampleqtyTxt == null) {
        break missingId;
      }

      return new WeldingProductionRepairFragmentBinding((ScrollView) rootView, addRepair,
          basketCode, binding_basketQtyLayout, constraint, dataLayout, defectnameTxt,
          defectsDetailsList, defectsList, hint, binding_jobOrderData, operation, parentDesc,
          productionRepairTxt, sampleqtyTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
