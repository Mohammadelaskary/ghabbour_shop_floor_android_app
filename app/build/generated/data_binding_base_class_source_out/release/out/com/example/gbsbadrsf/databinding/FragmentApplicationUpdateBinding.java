// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.gbsbadrsf.R;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentApplicationUpdateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LottieAnimationView background;

  @NonNull
  public final TextView loadErrorMessage;

  @NonNull
  public final LottieAnimationView loadingDots;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final TextView progressText;

  private FragmentApplicationUpdateBinding(@NonNull ConstraintLayout rootView,
      @NonNull LottieAnimationView background, @NonNull TextView loadErrorMessage,
      @NonNull LottieAnimationView loadingDots, @NonNull LinearProgressIndicator progressBar,
      @NonNull TextView progressText) {
    this.rootView = rootView;
    this.background = background;
    this.loadErrorMessage = loadErrorMessage;
    this.loadingDots = loadingDots;
    this.progressBar = progressBar;
    this.progressText = progressText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentApplicationUpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentApplicationUpdateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_application_update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentApplicationUpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background;
      LottieAnimationView background = ViewBindings.findChildViewById(rootView, id);
      if (background == null) {
        break missingId;
      }

      id = R.id.load_error_message;
      TextView loadErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (loadErrorMessage == null) {
        break missingId;
      }

      id = R.id.loading_dots;
      LottieAnimationView loadingDots = ViewBindings.findChildViewById(rootView, id);
      if (loadingDots == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progress_text;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      return new FragmentApplicationUpdateBinding((ConstraintLayout) rootView, background,
          loadErrorMessage, loadingDots, progressBar, progressText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
