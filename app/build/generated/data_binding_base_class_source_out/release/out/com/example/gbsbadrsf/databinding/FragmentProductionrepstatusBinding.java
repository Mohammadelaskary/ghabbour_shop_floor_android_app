// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductionrepstatusBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton backBtn;

  @NonNull
  public final ImageView basketbarcodeImg;

  @NonNull
  public final EditText basketcodeEdt;

  @NonNull
  public final TextView basketcodeTxt;

  @NonNull
  public final TextView child;

  @NonNull
  public final TextView childTxt;

  @NonNull
  public final TextView childname;

  @NonNull
  public final ConstraintLayout constraint;

  @NonNull
  public final RecyclerView defectlistRv;

  @NonNull
  public final TextView defectlistTxt;

  @NonNull
  public final TextView defectnameTxt;

  @NonNull
  public final TextView defectqtnTxt;

  @NonNull
  public final TextView defectqtnquantity;

  @NonNull
  public final HorizontalScrollView hsv;

  @NonNull
  public final TextView productionnotesTxt;

  @NonNull
  public final AppBarLayout productionrepairstatusAppbar;

  @NonNull
  public final TextView qcnotesTxt;

  private FragmentProductionrepstatusBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton backBtn, @NonNull ImageView basketbarcodeImg,
      @NonNull EditText basketcodeEdt, @NonNull TextView basketcodeTxt, @NonNull TextView child,
      @NonNull TextView childTxt, @NonNull TextView childname, @NonNull ConstraintLayout constraint,
      @NonNull RecyclerView defectlistRv, @NonNull TextView defectlistTxt,
      @NonNull TextView defectnameTxt, @NonNull TextView defectqtnTxt,
      @NonNull TextView defectqtnquantity, @NonNull HorizontalScrollView hsv,
      @NonNull TextView productionnotesTxt, @NonNull AppBarLayout productionrepairstatusAppbar,
      @NonNull TextView qcnotesTxt) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.basketbarcodeImg = basketbarcodeImg;
    this.basketcodeEdt = basketcodeEdt;
    this.basketcodeTxt = basketcodeTxt;
    this.child = child;
    this.childTxt = childTxt;
    this.childname = childname;
    this.constraint = constraint;
    this.defectlistRv = defectlistRv;
    this.defectlistTxt = defectlistTxt;
    this.defectnameTxt = defectnameTxt;
    this.defectqtnTxt = defectqtnTxt;
    this.defectqtnquantity = defectqtnquantity;
    this.hsv = hsv;
    this.productionnotesTxt = productionnotesTxt;
    this.productionrepairstatusAppbar = productionrepairstatusAppbar;
    this.qcnotesTxt = qcnotesTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductionrepstatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductionrepstatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_productionrepstatus, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductionrepstatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      MaterialButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.basketbarcode_img;
      ImageView basketbarcodeImg = ViewBindings.findChildViewById(rootView, id);
      if (basketbarcodeImg == null) {
        break missingId;
      }

      id = R.id.basketcode_edt;
      EditText basketcodeEdt = ViewBindings.findChildViewById(rootView, id);
      if (basketcodeEdt == null) {
        break missingId;
      }

      id = R.id.basketcode_txt;
      TextView basketcodeTxt = ViewBindings.findChildViewById(rootView, id);
      if (basketcodeTxt == null) {
        break missingId;
      }

      id = R.id.child;
      TextView child = ViewBindings.findChildViewById(rootView, id);
      if (child == null) {
        break missingId;
      }

      id = R.id.child_txt;
      TextView childTxt = ViewBindings.findChildViewById(rootView, id);
      if (childTxt == null) {
        break missingId;
      }

      id = R.id.childname;
      TextView childname = ViewBindings.findChildViewById(rootView, id);
      if (childname == null) {
        break missingId;
      }

      id = R.id.constraint;
      ConstraintLayout constraint = ViewBindings.findChildViewById(rootView, id);
      if (constraint == null) {
        break missingId;
      }

      id = R.id.defectlist_rv;
      RecyclerView defectlistRv = ViewBindings.findChildViewById(rootView, id);
      if (defectlistRv == null) {
        break missingId;
      }

      id = R.id.defectlist_txt;
      TextView defectlistTxt = ViewBindings.findChildViewById(rootView, id);
      if (defectlistTxt == null) {
        break missingId;
      }

      id = R.id.defectname_txt;
      TextView defectnameTxt = ViewBindings.findChildViewById(rootView, id);
      if (defectnameTxt == null) {
        break missingId;
      }

      id = R.id.defectqtn_txt;
      TextView defectqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (defectqtnTxt == null) {
        break missingId;
      }

      id = R.id.defectqtnquantity;
      TextView defectqtnquantity = ViewBindings.findChildViewById(rootView, id);
      if (defectqtnquantity == null) {
        break missingId;
      }

      id = R.id.hsv;
      HorizontalScrollView hsv = ViewBindings.findChildViewById(rootView, id);
      if (hsv == null) {
        break missingId;
      }

      id = R.id.productionnotes_txt;
      TextView productionnotesTxt = ViewBindings.findChildViewById(rootView, id);
      if (productionnotesTxt == null) {
        break missingId;
      }

      id = R.id.productionrepairstatus_appbar;
      AppBarLayout productionrepairstatusAppbar = ViewBindings.findChildViewById(rootView, id);
      if (productionrepairstatusAppbar == null) {
        break missingId;
      }

      id = R.id.qcnotes_txt;
      TextView qcnotesTxt = ViewBindings.findChildViewById(rootView, id);
      if (qcnotesTxt == null) {
        break missingId;
      }

      return new FragmentProductionrepstatusBinding((ConstraintLayout) rootView, backBtn,
          basketbarcodeImg, basketcodeEdt, basketcodeTxt, child, childTxt, childname, constraint,
          defectlistRv, defectlistTxt, defectnameTxt, defectqtnTxt, defectqtnquantity, hsv,
          productionnotesTxt, productionrepairstatusAppbar, qcnotesTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
