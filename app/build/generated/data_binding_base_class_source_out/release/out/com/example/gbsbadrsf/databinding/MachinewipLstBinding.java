// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MachinewipLstBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView childcode;

  @NonNull
  public final TextView childdesc;

  @NonNull
  public final TextView jobordername;

  @NonNull
  public final TextView joborderqty;

  @NonNull
  public final TextView loadingqty;

  @NonNull
  public final TextView loadingtime;

  @NonNull
  public final TextView machinecodeCheckBox;

  @NonNull
  public final TextView operationname;

  @NonNull
  public final TextView operationntime;

  @NonNull
  public final TextView remainingtime;

  private MachinewipLstBinding(@NonNull ConstraintLayout rootView, @NonNull TextView childcode,
      @NonNull TextView childdesc, @NonNull TextView jobordername, @NonNull TextView joborderqty,
      @NonNull TextView loadingqty, @NonNull TextView loadingtime,
      @NonNull TextView machinecodeCheckBox, @NonNull TextView operationname,
      @NonNull TextView operationntime, @NonNull TextView remainingtime) {
    this.rootView = rootView;
    this.childcode = childcode;
    this.childdesc = childdesc;
    this.jobordername = jobordername;
    this.joborderqty = joborderqty;
    this.loadingqty = loadingqty;
    this.loadingtime = loadingtime;
    this.machinecodeCheckBox = machinecodeCheckBox;
    this.operationname = operationname;
    this.operationntime = operationntime;
    this.remainingtime = remainingtime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MachinewipLstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MachinewipLstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.machinewip_lst, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MachinewipLstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.childcode;
      TextView childcode = ViewBindings.findChildViewById(rootView, id);
      if (childcode == null) {
        break missingId;
      }

      id = R.id.childdesc;
      TextView childdesc = ViewBindings.findChildViewById(rootView, id);
      if (childdesc == null) {
        break missingId;
      }

      id = R.id.jobordername;
      TextView jobordername = ViewBindings.findChildViewById(rootView, id);
      if (jobordername == null) {
        break missingId;
      }

      id = R.id.joborderqty;
      TextView joborderqty = ViewBindings.findChildViewById(rootView, id);
      if (joborderqty == null) {
        break missingId;
      }

      id = R.id.loadingqty;
      TextView loadingqty = ViewBindings.findChildViewById(rootView, id);
      if (loadingqty == null) {
        break missingId;
      }

      id = R.id.loadingtime;
      TextView loadingtime = ViewBindings.findChildViewById(rootView, id);
      if (loadingtime == null) {
        break missingId;
      }

      id = R.id.machinecode_checkBox;
      TextView machinecodeCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (machinecodeCheckBox == null) {
        break missingId;
      }

      id = R.id.operationname;
      TextView operationname = ViewBindings.findChildViewById(rootView, id);
      if (operationname == null) {
        break missingId;
      }

      id = R.id.operationntime;
      TextView operationntime = ViewBindings.findChildViewById(rootView, id);
      if (operationntime == null) {
        break missingId;
      }

      id = R.id.remainingtime;
      TextView remainingtime = ViewBindings.findChildViewById(rootView, id);
      if (remainingtime == null) {
        break missingId;
      }

      return new MachinewipLstBinding((ConstraintLayout) rootView, childcode, childdesc,
          jobordername, joborderqty, loadingqty, loadingtime, machinecodeCheckBox, operationname,
          operationntime, remainingtime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
