// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWeldingQualityRepairBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputLayout basketCode;

  @NonNull
  public final BasketQtyDataBinding basketQtyLayout;

  @NonNull
  public final ConstraintLayout dataLayout;

  @NonNull
  public final RecyclerView defectsDetailsList;

  @NonNull
  public final TextView defectsList;

  @NonNull
  public final TextView defectsQty;

  @NonNull
  public final TextView holdQty;

  @NonNull
  public final JobOrderDataBinding jobOrderData;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView parentDesc;

  @NonNull
  public final TextView qualityRepairTxt;

  private FragmentWeldingQualityRepairBinding(@NonNull ScrollView rootView,
      @NonNull TextInputLayout basketCode, @NonNull BasketQtyDataBinding basketQtyLayout,
      @NonNull ConstraintLayout dataLayout, @NonNull RecyclerView defectsDetailsList,
      @NonNull TextView defectsList, @NonNull TextView defectsQty, @NonNull TextView holdQty,
      @NonNull JobOrderDataBinding jobOrderData, @NonNull LinearLayout linearLayout,
      @NonNull TextView operation, @NonNull TextView parentDesc,
      @NonNull TextView qualityRepairTxt) {
    this.rootView = rootView;
    this.basketCode = basketCode;
    this.basketQtyLayout = basketQtyLayout;
    this.dataLayout = dataLayout;
    this.defectsDetailsList = defectsDetailsList;
    this.defectsList = defectsList;
    this.defectsQty = defectsQty;
    this.holdQty = holdQty;
    this.jobOrderData = jobOrderData;
    this.linearLayout = linearLayout;
    this.operation = operation;
    this.parentDesc = parentDesc;
    this.qualityRepairTxt = qualityRepairTxt;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWeldingQualityRepairBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWeldingQualityRepairBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_welding_quality_repair, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWeldingQualityRepairBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.basket_code;
      TextInputLayout basketCode = ViewBindings.findChildViewById(rootView, id);
      if (basketCode == null) {
        break missingId;
      }

      id = R.id.basket_qty_layout;
      View basketQtyLayout = ViewBindings.findChildViewById(rootView, id);
      if (basketQtyLayout == null) {
        break missingId;
      }
      BasketQtyDataBinding binding_basketQtyLayout = BasketQtyDataBinding.bind(basketQtyLayout);

      id = R.id.data_layout;
      ConstraintLayout dataLayout = ViewBindings.findChildViewById(rootView, id);
      if (dataLayout == null) {
        break missingId;
      }

      id = R.id.defects_details_list;
      RecyclerView defectsDetailsList = ViewBindings.findChildViewById(rootView, id);
      if (defectsDetailsList == null) {
        break missingId;
      }

      id = R.id.defects_list;
      TextView defectsList = ViewBindings.findChildViewById(rootView, id);
      if (defectsList == null) {
        break missingId;
      }

      id = R.id.defects_qty;
      TextView defectsQty = ViewBindings.findChildViewById(rootView, id);
      if (defectsQty == null) {
        break missingId;
      }

      id = R.id.hold_qty;
      TextView holdQty = ViewBindings.findChildViewById(rootView, id);
      if (holdQty == null) {
        break missingId;
      }

      id = R.id.job_order_data;
      View jobOrderData = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderData == null) {
        break missingId;
      }
      JobOrderDataBinding binding_jobOrderData = JobOrderDataBinding.bind(jobOrderData);

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.operation;
      TextView operation = ViewBindings.findChildViewById(rootView, id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.parent_desc;
      TextView parentDesc = ViewBindings.findChildViewById(rootView, id);
      if (parentDesc == null) {
        break missingId;
      }

      id = R.id.quality_repair_txt;
      TextView qualityRepairTxt = ViewBindings.findChildViewById(rootView, id);
      if (qualityRepairTxt == null) {
        break missingId;
      }

      return new FragmentWeldingQualityRepairBinding((ScrollView) rootView, basketCode,
          binding_basketQtyLayout, dataLayout, defectsDetailsList, defectsList, defectsQty, holdQty,
          binding_jobOrderData, linearLayout, operation, parentDesc, qualityRepairTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
