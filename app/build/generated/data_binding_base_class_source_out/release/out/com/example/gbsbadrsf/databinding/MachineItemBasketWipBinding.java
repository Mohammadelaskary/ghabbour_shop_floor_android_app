// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MachineItemBasketWipBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dieDesc;

  @NonNull
  public final TextView loadingQty;

  @NonNull
  public final TextView machineDesc;

  @NonNull
  public final ConstraintLayout machineDieData;

  @NonNull
  public final TextView machineTitleTxt;

  @NonNull
  public final ConstraintLayout operationData;

  @NonNull
  public final TextView operationDesc;

  @NonNull
  public final TextView operationTime;

  @NonNull
  public final TextView operationTitleTxt;

  @NonNull
  public final ConstraintLayout qtyData;

  @NonNull
  public final TextView qtyTitle;

  @NonNull
  public final TextView signInTime;

  @NonNull
  public final TextView signOffQty;

  @NonNull
  public final TextView signOffTime;

  @NonNull
  public final ConstraintLayout timeData;

  @NonNull
  public final TextView timeTxt;

  private MachineItemBasketWipBinding(@NonNull LinearLayout rootView, @NonNull TextView dieDesc,
      @NonNull TextView loadingQty, @NonNull TextView machineDesc,
      @NonNull ConstraintLayout machineDieData, @NonNull TextView machineTitleTxt,
      @NonNull ConstraintLayout operationData, @NonNull TextView operationDesc,
      @NonNull TextView operationTime, @NonNull TextView operationTitleTxt,
      @NonNull ConstraintLayout qtyData, @NonNull TextView qtyTitle, @NonNull TextView signInTime,
      @NonNull TextView signOffQty, @NonNull TextView signOffTime,
      @NonNull ConstraintLayout timeData, @NonNull TextView timeTxt) {
    this.rootView = rootView;
    this.dieDesc = dieDesc;
    this.loadingQty = loadingQty;
    this.machineDesc = machineDesc;
    this.machineDieData = machineDieData;
    this.machineTitleTxt = machineTitleTxt;
    this.operationData = operationData;
    this.operationDesc = operationDesc;
    this.operationTime = operationTime;
    this.operationTitleTxt = operationTitleTxt;
    this.qtyData = qtyData;
    this.qtyTitle = qtyTitle;
    this.signInTime = signInTime;
    this.signOffQty = signOffQty;
    this.signOffTime = signOffTime;
    this.timeData = timeData;
    this.timeTxt = timeTxt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MachineItemBasketWipBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MachineItemBasketWipBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.machine_item_basket_wip, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MachineItemBasketWipBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.die_desc;
      TextView dieDesc = ViewBindings.findChildViewById(rootView, id);
      if (dieDesc == null) {
        break missingId;
      }

      id = R.id.loading_qty;
      TextView loadingQty = ViewBindings.findChildViewById(rootView, id);
      if (loadingQty == null) {
        break missingId;
      }

      id = R.id.machine_desc;
      TextView machineDesc = ViewBindings.findChildViewById(rootView, id);
      if (machineDesc == null) {
        break missingId;
      }

      id = R.id.machine_die_data;
      ConstraintLayout machineDieData = ViewBindings.findChildViewById(rootView, id);
      if (machineDieData == null) {
        break missingId;
      }

      id = R.id.machine_title_txt;
      TextView machineTitleTxt = ViewBindings.findChildViewById(rootView, id);
      if (machineTitleTxt == null) {
        break missingId;
      }

      id = R.id.operation_data;
      ConstraintLayout operationData = ViewBindings.findChildViewById(rootView, id);
      if (operationData == null) {
        break missingId;
      }

      id = R.id.operation_desc;
      TextView operationDesc = ViewBindings.findChildViewById(rootView, id);
      if (operationDesc == null) {
        break missingId;
      }

      id = R.id.operation_time;
      TextView operationTime = ViewBindings.findChildViewById(rootView, id);
      if (operationTime == null) {
        break missingId;
      }

      id = R.id.operation_title_txt;
      TextView operationTitleTxt = ViewBindings.findChildViewById(rootView, id);
      if (operationTitleTxt == null) {
        break missingId;
      }

      id = R.id.qty_data;
      ConstraintLayout qtyData = ViewBindings.findChildViewById(rootView, id);
      if (qtyData == null) {
        break missingId;
      }

      id = R.id.qty_title;
      TextView qtyTitle = ViewBindings.findChildViewById(rootView, id);
      if (qtyTitle == null) {
        break missingId;
      }

      id = R.id.sign_in_time;
      TextView signInTime = ViewBindings.findChildViewById(rootView, id);
      if (signInTime == null) {
        break missingId;
      }

      id = R.id.sign_off_qty;
      TextView signOffQty = ViewBindings.findChildViewById(rootView, id);
      if (signOffQty == null) {
        break missingId;
      }

      id = R.id.sign_off_time;
      TextView signOffTime = ViewBindings.findChildViewById(rootView, id);
      if (signOffTime == null) {
        break missingId;
      }

      id = R.id.time_data;
      ConstraintLayout timeData = ViewBindings.findChildViewById(rootView, id);
      if (timeData == null) {
        break missingId;
      }

      id = R.id.time_txt;
      TextView timeTxt = ViewBindings.findChildViewById(rootView, id);
      if (timeTxt == null) {
        break missingId;
      }

      return new MachineItemBasketWipBinding((LinearLayout) rootView, dieDesc, loadingQty,
          machineDesc, machineDieData, machineTitleTxt, operationData, operationDesc, operationTime,
          operationTitleTxt, qtyData, qtyTitle, signInTime, signOffQty, signOffTime, timeData,
          timeTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
