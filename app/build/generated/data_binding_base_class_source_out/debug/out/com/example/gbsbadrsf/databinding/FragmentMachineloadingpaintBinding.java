// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMachineloadingpaintBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView baskets;

  @NonNull
  public final TextInputLayout childbasketcodeEdt;

  @NonNull
  public final TextInputEditText childbasketcodeNewedttxt;

  @NonNull
  public final MaterialButton itemcomponentBtn;

  @NonNull
  public final JobOrderDataBinding jobOrderData;

  @NonNull
  public final TextView loadingQty;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView parentdesc;

  @NonNull
  public final NestedScrollView recyclerViewContainer;

  @NonNull
  public final MaterialButton saveBtn;

  @NonNull
  public final MaterialButton signInBaskets;

  @NonNull
  public final ConstraintLayout signOffData;

  @NonNull
  public final TextView signOffQtyTxt;

  @NonNull
  public final TextInputLayout stationcodeEdt;

  @NonNull
  public final TextInputEditText stationcodeNewedttxt;

  @NonNull
  public final TextView stationloadingTxt;

  private FragmentMachineloadingpaintBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView baskets, @NonNull TextInputLayout childbasketcodeEdt,
      @NonNull TextInputEditText childbasketcodeNewedttxt, @NonNull MaterialButton itemcomponentBtn,
      @NonNull JobOrderDataBinding jobOrderData, @NonNull TextView loadingQty,
      @NonNull TextView operation, @NonNull TextView parentdesc,
      @NonNull NestedScrollView recyclerViewContainer, @NonNull MaterialButton saveBtn,
      @NonNull MaterialButton signInBaskets, @NonNull ConstraintLayout signOffData,
      @NonNull TextView signOffQtyTxt, @NonNull TextInputLayout stationcodeEdt,
      @NonNull TextInputEditText stationcodeNewedttxt, @NonNull TextView stationloadingTxt) {
    this.rootView = rootView;
    this.baskets = baskets;
    this.childbasketcodeEdt = childbasketcodeEdt;
    this.childbasketcodeNewedttxt = childbasketcodeNewedttxt;
    this.itemcomponentBtn = itemcomponentBtn;
    this.jobOrderData = jobOrderData;
    this.loadingQty = loadingQty;
    this.operation = operation;
    this.parentdesc = parentdesc;
    this.recyclerViewContainer = recyclerViewContainer;
    this.saveBtn = saveBtn;
    this.signInBaskets = signInBaskets;
    this.signOffData = signOffData;
    this.signOffQtyTxt = signOffQtyTxt;
    this.stationcodeEdt = stationcodeEdt;
    this.stationcodeNewedttxt = stationcodeNewedttxt;
    this.stationloadingTxt = stationloadingTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMachineloadingpaintBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMachineloadingpaintBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_machineloadingpaint, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMachineloadingpaintBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.baskets;
      RecyclerView baskets = ViewBindings.findChildViewById(rootView, id);
      if (baskets == null) {
        break missingId;
      }

      id = R.id.childbasketcode_edt;
      TextInputLayout childbasketcodeEdt = ViewBindings.findChildViewById(rootView, id);
      if (childbasketcodeEdt == null) {
        break missingId;
      }

      id = R.id.childbasketcode_newedttxt;
      TextInputEditText childbasketcodeNewedttxt = ViewBindings.findChildViewById(rootView, id);
      if (childbasketcodeNewedttxt == null) {
        break missingId;
      }

      id = R.id.itemcomponent_btn;
      MaterialButton itemcomponentBtn = ViewBindings.findChildViewById(rootView, id);
      if (itemcomponentBtn == null) {
        break missingId;
      }

      id = R.id.job_order_data;
      View jobOrderData = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderData == null) {
        break missingId;
      }
      JobOrderDataBinding binding_jobOrderData = JobOrderDataBinding.bind(jobOrderData);

      id = R.id.loading_qty;
      TextView loadingQty = ViewBindings.findChildViewById(rootView, id);
      if (loadingQty == null) {
        break missingId;
      }

      id = R.id.operation;
      TextView operation = ViewBindings.findChildViewById(rootView, id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.parentdesc;
      TextView parentdesc = ViewBindings.findChildViewById(rootView, id);
      if (parentdesc == null) {
        break missingId;
      }

      id = R.id.recycler_view_container;
      NestedScrollView recyclerViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewContainer == null) {
        break missingId;
      }

      id = R.id.save_btn;
      MaterialButton saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.sign_in_baskets;
      MaterialButton signInBaskets = ViewBindings.findChildViewById(rootView, id);
      if (signInBaskets == null) {
        break missingId;
      }

      id = R.id.sign_off_data;
      ConstraintLayout signOffData = ViewBindings.findChildViewById(rootView, id);
      if (signOffData == null) {
        break missingId;
      }

      id = R.id.sign_off_qty_txt;
      TextView signOffQtyTxt = ViewBindings.findChildViewById(rootView, id);
      if (signOffQtyTxt == null) {
        break missingId;
      }

      id = R.id.stationcode_edt;
      TextInputLayout stationcodeEdt = ViewBindings.findChildViewById(rootView, id);
      if (stationcodeEdt == null) {
        break missingId;
      }

      id = R.id.stationcode_newedttxt;
      TextInputEditText stationcodeNewedttxt = ViewBindings.findChildViewById(rootView, id);
      if (stationcodeNewedttxt == null) {
        break missingId;
      }

      id = R.id.stationloading_txt;
      TextView stationloadingTxt = ViewBindings.findChildViewById(rootView, id);
      if (stationloadingTxt == null) {
        break missingId;
      }

      return new FragmentMachineloadingpaintBinding((ConstraintLayout) rootView, baskets,
          childbasketcodeEdt, childbasketcodeNewedttxt, itemcomponentBtn, binding_jobOrderData,
          loadingQty, operation, parentdesc, recyclerViewContainer, saveBtn, signInBaskets,
          signOffData, signOffQtyTxt, stationcodeEdt, stationcodeNewedttxt, stationloadingTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
