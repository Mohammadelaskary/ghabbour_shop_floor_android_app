// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignoffwecustomdialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout basketcodeEdt;

  @NonNull
  public final RecyclerView basketcodeRv;

  @NonNull
  public final TextView basketqty;

  @NonNull
  public final TextInputEditText newbasketcodeEdt;

  @NonNull
  public final TextView parentdesc;

  @NonNull
  public final TextView parentdescTxt;

  @NonNull
  public final MaterialButton saveBtn;

  @NonNull
  public final TextView signoffqty;

  @NonNull
  public final TextView signoffqtyTxt;

  @NonNull
  public final Switch simpleSwitch;

  @NonNull
  public final TextView totalqtn;

  @NonNull
  public final EditText totalqtnEdt;

  @NonNull
  public final TextView totalqtnTxt;

  private SignoffwecustomdialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout basketcodeEdt, @NonNull RecyclerView basketcodeRv,
      @NonNull TextView basketqty, @NonNull TextInputEditText newbasketcodeEdt,
      @NonNull TextView parentdesc, @NonNull TextView parentdescTxt,
      @NonNull MaterialButton saveBtn, @NonNull TextView signoffqty,
      @NonNull TextView signoffqtyTxt, @NonNull Switch simpleSwitch, @NonNull TextView totalqtn,
      @NonNull EditText totalqtnEdt, @NonNull TextView totalqtnTxt) {
    this.rootView = rootView;
    this.basketcodeEdt = basketcodeEdt;
    this.basketcodeRv = basketcodeRv;
    this.basketqty = basketqty;
    this.newbasketcodeEdt = newbasketcodeEdt;
    this.parentdesc = parentdesc;
    this.parentdescTxt = parentdescTxt;
    this.saveBtn = saveBtn;
    this.signoffqty = signoffqty;
    this.signoffqtyTxt = signoffqtyTxt;
    this.simpleSwitch = simpleSwitch;
    this.totalqtn = totalqtn;
    this.totalqtnEdt = totalqtnEdt;
    this.totalqtnTxt = totalqtnTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignoffwecustomdialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignoffwecustomdialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.signoffwecustomdialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignoffwecustomdialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.basketcode_edt;
      TextInputLayout basketcodeEdt = ViewBindings.findChildViewById(rootView, id);
      if (basketcodeEdt == null) {
        break missingId;
      }

      id = R.id.basketcode_rv;
      RecyclerView basketcodeRv = ViewBindings.findChildViewById(rootView, id);
      if (basketcodeRv == null) {
        break missingId;
      }

      id = R.id.basketqty;
      TextView basketqty = ViewBindings.findChildViewById(rootView, id);
      if (basketqty == null) {
        break missingId;
      }

      id = R.id.newbasketcode_edt;
      TextInputEditText newbasketcodeEdt = ViewBindings.findChildViewById(rootView, id);
      if (newbasketcodeEdt == null) {
        break missingId;
      }

      id = R.id.parentdesc;
      TextView parentdesc = ViewBindings.findChildViewById(rootView, id);
      if (parentdesc == null) {
        break missingId;
      }

      id = R.id.parentdesc_txt;
      TextView parentdescTxt = ViewBindings.findChildViewById(rootView, id);
      if (parentdescTxt == null) {
        break missingId;
      }

      id = R.id.save_btn;
      MaterialButton saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.signoffqty;
      TextView signoffqty = ViewBindings.findChildViewById(rootView, id);
      if (signoffqty == null) {
        break missingId;
      }

      id = R.id.signoffqty_txt;
      TextView signoffqtyTxt = ViewBindings.findChildViewById(rootView, id);
      if (signoffqtyTxt == null) {
        break missingId;
      }

      id = R.id.simpleSwitch;
      Switch simpleSwitch = ViewBindings.findChildViewById(rootView, id);
      if (simpleSwitch == null) {
        break missingId;
      }

      id = R.id.totalqtn;
      TextView totalqtn = ViewBindings.findChildViewById(rootView, id);
      if (totalqtn == null) {
        break missingId;
      }

      id = R.id.totalqtn_edt;
      EditText totalqtnEdt = ViewBindings.findChildViewById(rootView, id);
      if (totalqtnEdt == null) {
        break missingId;
      }

      id = R.id.totalqtn_txt;
      TextView totalqtnTxt = ViewBindings.findChildViewById(rootView, id);
      if (totalqtnTxt == null) {
        break missingId;
      }

      return new SignoffwecustomdialogBinding((ConstraintLayout) rootView, basketcodeEdt,
          basketcodeRv, basketqty, newbasketcodeEdt, parentdesc, parentdescTxt, saveBtn, signoffqty,
          signoffqtyTxt, simpleSwitch, totalqtn, totalqtnEdt, totalqtnTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
