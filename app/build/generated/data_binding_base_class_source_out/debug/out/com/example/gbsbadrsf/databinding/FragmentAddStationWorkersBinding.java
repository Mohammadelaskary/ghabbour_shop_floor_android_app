// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddStationWorkersBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView Joborderqtn;

  @NonNull
  public final RecyclerView allWorkers;

  @NonNull
  public final TextView allWorkersTitle;

  @NonNull
  public final ConstraintLayout dataLayout;

  @NonNull
  public final ConstraintLayout jobOrderData;

  @NonNull
  public final TextView jobordernum;

  @NonNull
  public final TextView jobordernumTxt;

  @NonNull
  public final View line;

  @NonNull
  public final TextView machineloadingTxt;

  @NonNull
  public final TextView parentDesc;

  @NonNull
  public final MaterialButton save;

  @NonNull
  public final RecyclerView selectedWorkers;

  @NonNull
  public final TextView selectedWorkersTitle;

  @NonNull
  public final TextInputLayout stationCode;

  @NonNull
  public final TextInputLayout workerNameCode;

  private FragmentAddStationWorkersBinding(@NonNull ScrollView rootView,
      @NonNull TextView Joborderqtn, @NonNull RecyclerView allWorkers,
      @NonNull TextView allWorkersTitle, @NonNull ConstraintLayout dataLayout,
      @NonNull ConstraintLayout jobOrderData, @NonNull TextView jobordernum,
      @NonNull TextView jobordernumTxt, @NonNull View line, @NonNull TextView machineloadingTxt,
      @NonNull TextView parentDesc, @NonNull MaterialButton save,
      @NonNull RecyclerView selectedWorkers, @NonNull TextView selectedWorkersTitle,
      @NonNull TextInputLayout stationCode, @NonNull TextInputLayout workerNameCode) {
    this.rootView = rootView;
    this.Joborderqtn = Joborderqtn;
    this.allWorkers = allWorkers;
    this.allWorkersTitle = allWorkersTitle;
    this.dataLayout = dataLayout;
    this.jobOrderData = jobOrderData;
    this.jobordernum = jobordernum;
    this.jobordernumTxt = jobordernumTxt;
    this.line = line;
    this.machineloadingTxt = machineloadingTxt;
    this.parentDesc = parentDesc;
    this.save = save;
    this.selectedWorkers = selectedWorkers;
    this.selectedWorkersTitle = selectedWorkersTitle;
    this.stationCode = stationCode;
    this.workerNameCode = workerNameCode;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddStationWorkersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddStationWorkersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_station_workers, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddStationWorkersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Joborderqtn;
      TextView Joborderqtn = ViewBindings.findChildViewById(rootView, id);
      if (Joborderqtn == null) {
        break missingId;
      }

      id = R.id.all_workers;
      RecyclerView allWorkers = ViewBindings.findChildViewById(rootView, id);
      if (allWorkers == null) {
        break missingId;
      }

      id = R.id.all_workers_title;
      TextView allWorkersTitle = ViewBindings.findChildViewById(rootView, id);
      if (allWorkersTitle == null) {
        break missingId;
      }

      id = R.id.data_layout;
      ConstraintLayout dataLayout = ViewBindings.findChildViewById(rootView, id);
      if (dataLayout == null) {
        break missingId;
      }

      id = R.id.job_order_data;
      ConstraintLayout jobOrderData = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderData == null) {
        break missingId;
      }

      id = R.id.jobordernum;
      TextView jobordernum = ViewBindings.findChildViewById(rootView, id);
      if (jobordernum == null) {
        break missingId;
      }

      id = R.id.jobordernum_txt;
      TextView jobordernumTxt = ViewBindings.findChildViewById(rootView, id);
      if (jobordernumTxt == null) {
        break missingId;
      }

      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.machineloading_txt;
      TextView machineloadingTxt = ViewBindings.findChildViewById(rootView, id);
      if (machineloadingTxt == null) {
        break missingId;
      }

      id = R.id.parentDesc;
      TextView parentDesc = ViewBindings.findChildViewById(rootView, id);
      if (parentDesc == null) {
        break missingId;
      }

      id = R.id.save;
      MaterialButton save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.selected_workers;
      RecyclerView selectedWorkers = ViewBindings.findChildViewById(rootView, id);
      if (selectedWorkers == null) {
        break missingId;
      }

      id = R.id.selected_workers_title;
      TextView selectedWorkersTitle = ViewBindings.findChildViewById(rootView, id);
      if (selectedWorkersTitle == null) {
        break missingId;
      }

      id = R.id.station_code;
      TextInputLayout stationCode = ViewBindings.findChildViewById(rootView, id);
      if (stationCode == null) {
        break missingId;
      }

      id = R.id.worker_name_code;
      TextInputLayout workerNameCode = ViewBindings.findChildViewById(rootView, id);
      if (workerNameCode == null) {
        break missingId;
      }

      return new FragmentAddStationWorkersBinding((ScrollView) rootView, Joborderqtn, allWorkers,
          allWorkersTitle, dataLayout, jobOrderData, jobordernum, jobordernumTxt, line,
          machineloadingTxt, parentDesc, save, selectedWorkers, selectedWorkersTitle, stationCode,
          workerNameCode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
