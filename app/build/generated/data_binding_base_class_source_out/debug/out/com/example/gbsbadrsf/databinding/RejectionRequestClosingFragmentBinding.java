// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RejectionRequestClosingFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputLayout certificationNo;

  @NonNull
  public final TextView childesc;

  @NonNull
  public final MaterialButton closeRequest;

  @NonNull
  public final JobOrderDataBinding jobOrderData;

  @NonNull
  public final TextView locator;

  @NonNull
  public final ConstraintLayout locatorData;

  @NonNull
  public final TextInputEditText newloadingqtnEdt;

  @NonNull
  public final TextView qualityscrapTxt;

  @NonNull
  public final TextView reason;

  @NonNull
  public final TextView reasonTxt;

  @NonNull
  public final RejectedLayoutDataBinding rejectedQtyData;

  @NonNull
  public final TextView responsibledepTxt;

  @NonNull
  public final TextView responspileDep;

  @NonNull
  public final TextView subInventory;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView7;

  private RejectionRequestClosingFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputLayout certificationNo, @NonNull TextView childesc,
      @NonNull MaterialButton closeRequest, @NonNull JobOrderDataBinding jobOrderData,
      @NonNull TextView locator, @NonNull ConstraintLayout locatorData,
      @NonNull TextInputEditText newloadingqtnEdt, @NonNull TextView qualityscrapTxt,
      @NonNull TextView reason, @NonNull TextView reasonTxt,
      @NonNull RejectedLayoutDataBinding rejectedQtyData, @NonNull TextView responsibledepTxt,
      @NonNull TextView responspileDep, @NonNull TextView subInventory, @NonNull TextView textView6,
      @NonNull TextView textView7) {
    this.rootView = rootView;
    this.certificationNo = certificationNo;
    this.childesc = childesc;
    this.closeRequest = closeRequest;
    this.jobOrderData = jobOrderData;
    this.locator = locator;
    this.locatorData = locatorData;
    this.newloadingqtnEdt = newloadingqtnEdt;
    this.qualityscrapTxt = qualityscrapTxt;
    this.reason = reason;
    this.reasonTxt = reasonTxt;
    this.rejectedQtyData = rejectedQtyData;
    this.responsibledepTxt = responsibledepTxt;
    this.responspileDep = responspileDep;
    this.subInventory = subInventory;
    this.textView6 = textView6;
    this.textView7 = textView7;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RejectionRequestClosingFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RejectionRequestClosingFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rejection_request_closing_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RejectionRequestClosingFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.certification_no;
      TextInputLayout certificationNo = ViewBindings.findChildViewById(rootView, id);
      if (certificationNo == null) {
        break missingId;
      }

      id = R.id.childesc;
      TextView childesc = ViewBindings.findChildViewById(rootView, id);
      if (childesc == null) {
        break missingId;
      }

      id = R.id.close_request;
      MaterialButton closeRequest = ViewBindings.findChildViewById(rootView, id);
      if (closeRequest == null) {
        break missingId;
      }

      id = R.id.job_order_data;
      View jobOrderData = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderData == null) {
        break missingId;
      }
      JobOrderDataBinding binding_jobOrderData = JobOrderDataBinding.bind(jobOrderData);

      id = R.id.locator;
      TextView locator = ViewBindings.findChildViewById(rootView, id);
      if (locator == null) {
        break missingId;
      }

      id = R.id.locator_data;
      ConstraintLayout locatorData = ViewBindings.findChildViewById(rootView, id);
      if (locatorData == null) {
        break missingId;
      }

      id = R.id.newloadingqtn_edt;
      TextInputEditText newloadingqtnEdt = ViewBindings.findChildViewById(rootView, id);
      if (newloadingqtnEdt == null) {
        break missingId;
      }

      id = R.id.qualityscrap_txt;
      TextView qualityscrapTxt = ViewBindings.findChildViewById(rootView, id);
      if (qualityscrapTxt == null) {
        break missingId;
      }

      id = R.id.reason;
      TextView reason = ViewBindings.findChildViewById(rootView, id);
      if (reason == null) {
        break missingId;
      }

      id = R.id.reason_txt;
      TextView reasonTxt = ViewBindings.findChildViewById(rootView, id);
      if (reasonTxt == null) {
        break missingId;
      }

      id = R.id.rejected_qty_data;
      View rejectedQtyData = ViewBindings.findChildViewById(rootView, id);
      if (rejectedQtyData == null) {
        break missingId;
      }
      RejectedLayoutDataBinding binding_rejectedQtyData = RejectedLayoutDataBinding.bind(rejectedQtyData);

      id = R.id.responsibledep_txt;
      TextView responsibledepTxt = ViewBindings.findChildViewById(rootView, id);
      if (responsibledepTxt == null) {
        break missingId;
      }

      id = R.id.responspile_dep;
      TextView responspileDep = ViewBindings.findChildViewById(rootView, id);
      if (responspileDep == null) {
        break missingId;
      }

      id = R.id.sub_inventory;
      TextView subInventory = ViewBindings.findChildViewById(rootView, id);
      if (subInventory == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      return new RejectionRequestClosingFragmentBinding((CoordinatorLayout) rootView,
          certificationNo, childesc, closeRequest, binding_jobOrderData, locator, locatorData,
          newloadingqtnEdt, qualityscrapTxt, reason, reasonTxt, binding_rejectedQtyData,
          responsibledepTxt, responspileDep, subInventory, textView6, textView7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
