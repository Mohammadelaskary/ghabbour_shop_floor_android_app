// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductionMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton ManfacturingBtn;

  @NonNull
  public final MaterialButton PaintBtn;

  @NonNull
  public final MaterialButton WarehouseBtn;

  @NonNull
  public final TextView productionmenuTxt;

  @NonNull
  public final MaterialButton weldingBtn;

  private FragmentProductionMenuBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton ManfacturingBtn, @NonNull MaterialButton PaintBtn,
      @NonNull MaterialButton WarehouseBtn, @NonNull TextView productionmenuTxt,
      @NonNull MaterialButton weldingBtn) {
    this.rootView = rootView;
    this.ManfacturingBtn = ManfacturingBtn;
    this.PaintBtn = PaintBtn;
    this.WarehouseBtn = WarehouseBtn;
    this.productionmenuTxt = productionmenuTxt;
    this.weldingBtn = weldingBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductionMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductionMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_production_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductionMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Manfacturing_btn;
      MaterialButton ManfacturingBtn = ViewBindings.findChildViewById(rootView, id);
      if (ManfacturingBtn == null) {
        break missingId;
      }

      id = R.id.Paint_btn;
      MaterialButton PaintBtn = ViewBindings.findChildViewById(rootView, id);
      if (PaintBtn == null) {
        break missingId;
      }

      id = R.id.Warehouse_btn;
      MaterialButton WarehouseBtn = ViewBindings.findChildViewById(rootView, id);
      if (WarehouseBtn == null) {
        break missingId;
      }

      id = R.id.productionmenu_txt;
      TextView productionmenuTxt = ViewBindings.findChildViewById(rootView, id);
      if (productionmenuTxt == null) {
        break missingId;
      }

      id = R.id.welding_btn;
      MaterialButton weldingBtn = ViewBindings.findChildViewById(rootView, id);
      if (weldingBtn == null) {
        break missingId;
      }

      return new FragmentProductionMenuBinding((ConstraintLayout) rootView, ManfacturingBtn,
          PaintBtn, WarehouseBtn, productionmenuTxt, weldingBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
