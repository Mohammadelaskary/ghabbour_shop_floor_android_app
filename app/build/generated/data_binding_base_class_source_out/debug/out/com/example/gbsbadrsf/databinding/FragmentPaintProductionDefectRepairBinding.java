// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPaintProductionDefectRepairBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout dataLayout;

  @NonNull
  public final DefectedQtyDataBinding defectedData;

  @NonNull
  public final RecyclerView defectsDetailsList;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView parentDesc;

  @NonNull
  public final TextView productionRepairTxt;

  @NonNull
  public final TextInputLayout repairedQty;

  @NonNull
  public final MaterialButton saveBtn;

  private FragmentPaintProductionDefectRepairBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout dataLayout, @NonNull DefectedQtyDataBinding defectedData,
      @NonNull RecyclerView defectsDetailsList, @NonNull TextView operation,
      @NonNull TextView parentDesc, @NonNull TextView productionRepairTxt,
      @NonNull TextInputLayout repairedQty, @NonNull MaterialButton saveBtn) {
    this.rootView = rootView;
    this.dataLayout = dataLayout;
    this.defectedData = defectedData;
    this.defectsDetailsList = defectsDetailsList;
    this.operation = operation;
    this.parentDesc = parentDesc;
    this.productionRepairTxt = productionRepairTxt;
    this.repairedQty = repairedQty;
    this.saveBtn = saveBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPaintProductionDefectRepairBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPaintProductionDefectRepairBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_paint_production_defect_repair, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPaintProductionDefectRepairBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.data_layout;
      LinearLayout dataLayout = ViewBindings.findChildViewById(rootView, id);
      if (dataLayout == null) {
        break missingId;
      }

      id = R.id.defected_data;
      View defectedData = ViewBindings.findChildViewById(rootView, id);
      if (defectedData == null) {
        break missingId;
      }
      DefectedQtyDataBinding binding_defectedData = DefectedQtyDataBinding.bind(defectedData);

      id = R.id.defects_details_list;
      RecyclerView defectsDetailsList = ViewBindings.findChildViewById(rootView, id);
      if (defectsDetailsList == null) {
        break missingId;
      }

      id = R.id.operation;
      TextView operation = ViewBindings.findChildViewById(rootView, id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.parent_desc;
      TextView parentDesc = ViewBindings.findChildViewById(rootView, id);
      if (parentDesc == null) {
        break missingId;
      }

      id = R.id.production_repair_txt;
      TextView productionRepairTxt = ViewBindings.findChildViewById(rootView, id);
      if (productionRepairTxt == null) {
        break missingId;
      }

      id = R.id.repaired_qty;
      TextInputLayout repairedQty = ViewBindings.findChildViewById(rootView, id);
      if (repairedQty == null) {
        break missingId;
      }

      id = R.id.save_btn;
      MaterialButton saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      return new FragmentPaintProductionDefectRepairBinding((ConstraintLayout) rootView, dataLayout,
          binding_defectedData, defectsDetailsList, operation, parentDesc, productionRepairTxt,
          repairedQty, saveBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
