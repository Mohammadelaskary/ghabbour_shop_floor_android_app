// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ManufacturingSignOffBasketsFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final OkBasketsBottomSheetBinding addOkBasketBottomSheet;

  @NonNull
  public final BasketCodeBottomSheetBinding defectedRejectedBasketCodeBottomSheet;

  @NonNull
  public final View disableColor;

  @NonNull
  public final JobOrderDataBinding jobOrderData;

  @NonNull
  public final TextView operation;

  @NonNull
  public final TextView parentDesc;

  @NonNull
  public final MaterialButton save;

  @NonNull
  public final AddBasketsLayoutBinding signOffBaskets;

  @NonNull
  public final SignOffQtyBinding signOffData;

  private ManufacturingSignOffBasketsFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull OkBasketsBottomSheetBinding addOkBasketBottomSheet,
      @NonNull BasketCodeBottomSheetBinding defectedRejectedBasketCodeBottomSheet,
      @NonNull View disableColor, @NonNull JobOrderDataBinding jobOrderData,
      @NonNull TextView operation, @NonNull TextView parentDesc, @NonNull MaterialButton save,
      @NonNull AddBasketsLayoutBinding signOffBaskets, @NonNull SignOffQtyBinding signOffData) {
    this.rootView = rootView;
    this.addOkBasketBottomSheet = addOkBasketBottomSheet;
    this.defectedRejectedBasketCodeBottomSheet = defectedRejectedBasketCodeBottomSheet;
    this.disableColor = disableColor;
    this.jobOrderData = jobOrderData;
    this.operation = operation;
    this.parentDesc = parentDesc;
    this.save = save;
    this.signOffBaskets = signOffBaskets;
    this.signOffData = signOffData;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ManufacturingSignOffBasketsFragmentBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ManufacturingSignOffBasketsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.manufacturing_sign_off_baskets_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ManufacturingSignOffBasketsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_ok_basket_bottom_sheet;
      View addOkBasketBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (addOkBasketBottomSheet == null) {
        break missingId;
      }
      OkBasketsBottomSheetBinding binding_addOkBasketBottomSheet = OkBasketsBottomSheetBinding.bind(addOkBasketBottomSheet);

      id = R.id.defected_rejected_basket_code_bottom_sheet;
      View defectedRejectedBasketCodeBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (defectedRejectedBasketCodeBottomSheet == null) {
        break missingId;
      }
      BasketCodeBottomSheetBinding binding_defectedRejectedBasketCodeBottomSheet = BasketCodeBottomSheetBinding.bind(defectedRejectedBasketCodeBottomSheet);

      id = R.id.disable_color;
      View disableColor = ViewBindings.findChildViewById(rootView, id);
      if (disableColor == null) {
        break missingId;
      }

      id = R.id.job_order_data;
      View jobOrderData = ViewBindings.findChildViewById(rootView, id);
      if (jobOrderData == null) {
        break missingId;
      }
      JobOrderDataBinding binding_jobOrderData = JobOrderDataBinding.bind(jobOrderData);

      id = R.id.operation;
      TextView operation = ViewBindings.findChildViewById(rootView, id);
      if (operation == null) {
        break missingId;
      }

      id = R.id.parent_desc;
      TextView parentDesc = ViewBindings.findChildViewById(rootView, id);
      if (parentDesc == null) {
        break missingId;
      }

      id = R.id.save;
      MaterialButton save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.sign_off_baskets;
      View signOffBaskets = ViewBindings.findChildViewById(rootView, id);
      if (signOffBaskets == null) {
        break missingId;
      }
      AddBasketsLayoutBinding binding_signOffBaskets = AddBasketsLayoutBinding.bind(signOffBaskets);

      id = R.id.sign_off_data;
      View signOffData = ViewBindings.findChildViewById(rootView, id);
      if (signOffData == null) {
        break missingId;
      }
      SignOffQtyBinding binding_signOffData = SignOffQtyBinding.bind(signOffData);

      return new ManufacturingSignOffBasketsFragmentBinding((CoordinatorLayout) rootView,
          binding_addOkBasketBottomSheet, binding_defectedRejectedBasketCodeBottomSheet,
          disableColor, binding_jobOrderData, operation, parentDesc, save, binding_signOffBaskets,
          binding_signOffData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
