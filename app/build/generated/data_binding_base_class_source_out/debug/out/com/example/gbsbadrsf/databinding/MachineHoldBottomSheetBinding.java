// Generated by view binder compiler. Do not edit!
package com.example.gbsbadrsf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gbsbadrsf.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MachineHoldBottomSheetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton cancel;

  @NonNull
  public final TextInputLayout okBasketCode;

  @NonNull
  public final TextInputLayout okQty;

  @NonNull
  public final MaterialButton saveBtn;

  @NonNull
  public final TextInputLayout stopReason;

  @NonNull
  public final AutoCompleteTextView stopReasonSpinner;

  private MachineHoldBottomSheetBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton cancel, @NonNull TextInputLayout okBasketCode,
      @NonNull TextInputLayout okQty, @NonNull MaterialButton saveBtn,
      @NonNull TextInputLayout stopReason, @NonNull AutoCompleteTextView stopReasonSpinner) {
    this.rootView = rootView;
    this.cancel = cancel;
    this.okBasketCode = okBasketCode;
    this.okQty = okQty;
    this.saveBtn = saveBtn;
    this.stopReason = stopReason;
    this.stopReasonSpinner = stopReasonSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MachineHoldBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MachineHoldBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.machine_hold_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MachineHoldBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel;
      MaterialButton cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.ok_basket_code;
      TextInputLayout okBasketCode = ViewBindings.findChildViewById(rootView, id);
      if (okBasketCode == null) {
        break missingId;
      }

      id = R.id.ok_qty;
      TextInputLayout okQty = ViewBindings.findChildViewById(rootView, id);
      if (okQty == null) {
        break missingId;
      }

      id = R.id.save_btn;
      MaterialButton saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.stop_reason;
      TextInputLayout stopReason = ViewBindings.findChildViewById(rootView, id);
      if (stopReason == null) {
        break missingId;
      }

      id = R.id.stop_reason_spinner;
      AutoCompleteTextView stopReasonSpinner = ViewBindings.findChildViewById(rootView, id);
      if (stopReasonSpinner == null) {
        break missingId;
      }

      return new MachineHoldBottomSheetBinding((ConstraintLayout) rootView, cancel, okBasketCode,
          okQty, saveBtn, stopReason, stopReasonSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
